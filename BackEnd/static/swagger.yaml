openapi: 3.0.0
info:
  title: MoveHive - API
  version: 1.0.0
  description: API para gerenciar usuários e esportes na aplicação MoveHive.
tags:
  - name: Usuário
    description: Operações relacionadas a usuários
  - name: Esporte
    description: Operações relacionadas a esportes
  - name: Eventos
    description: Operações relacionadas a eventos
  - name: Posts
    description: Operações relacionadas a Posts

components:
  securitySchemes:
    bearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT

# USUARIOS
paths:


  # REGISTRAR
  /usuario/RegistrarUsuario:
    post:
      tags:
        - Usuário
      summary: Registrar novo usuário
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                NomeCompleto:
                  type: string
                  example: "João da Silva"
                username:
                  type: string
                  example: "joaosilva"
                data_nascimento:
                  type: string
                  format: date
                  example: "2000-05-15"
                email:
                  type: string
                  format: email
                  example: "joao@example.com"
                senha:
                  type: string
                  format: password
                  example: "senhaSegura123"
              required:
                - NomeCompleto
                - username
                - data_nascimento
                - email
                - senha
      responses:
        '201':
          description: Usuário registrado com sucesso
          content:
            application/json:
              schema:
                type: object
                properties:
                  token:
                    type: string
                    example: "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9..."
        '400':
          description: Erro na requisição (campos inválidos ou obrigatórios não fornecidos)
          content:
            application/json:
              schema:
                type: object
                properties:
                  erro:
                    type: string
                    example: "Campos obrigatórios ausentes"


  # LOGAR
  /usuario/LoginUsuario:
    post:
      summary: Realiza login de usuário
      description: Autentica o usuário através de email e senha. Retorna um token JWT em caso de sucesso.
      tags:
        - Usuário
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                email:
                  type: string
                  example: usuario@email.com
                  description: Email do usuário cadastrado
                senha:
                  type: string
                  example: "senha123"
                  description: Senha do usuário
              required:
                - email
                - senha
      responses:
        '200':
          description: Login realizado com sucesso
          content:
            application/json:
              schema:
                type: object
                properties:
                  token:
                    type: string
                    example: eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9...
                    description: Token JWT para autenticação
        '400':
          description: Erro de validação - campos obrigatórios ausentes
          content:
            application/json:
              schema:
                type: object
                properties:
                  erro:
                    type: string
                    example: "Campos 'email' e 'senha' são obrigatórios"
        '401':
          description: Credenciais inválidas
          content:
            application/json:
              schema:
                type: object
                properties:
                  erro:
                    type: string
                    example: "Senha incorreta"
        '404':
          description: E-mail não encontrado
          content:
            application/json:
              schema:
                type: object
                properties:
                  erro:
                    type: string
                    example: "E-mail não encontrado"



  /usuario/DadosModal:
    post:
      tags:
        - Usuário
      summary: Adiciona ou atualiza dados do perfil do usuário
      description: Adiciona informações no perfil do usuário autenticado, como biografia, cidade, estado e esportes praticados.
      security:
        - bearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                biografia:
                  type: string
                  example: "Amo tecnologia e futebol."
                cidade:
                  type: string
                  example: São Paulo
                estado:
                  type: string
                  example: SP
                esportes_praticados:
                  type: object
                  additionalProperties:
                    type: string
                  example:
                    futebol: iniciante
                    basquete: amador
              required:
                - esportes_praticados
      responses:
        '200':
          description: Informações adicionadas com sucesso
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                    example: sucesso
                  mensagem:
                    type: string
                    example: Informações adicionadas com sucesso
        '400':
          description: Nenhum dado fornecido
          content:
            application/json:
              schema:
                type: object
                properties:
                  erro:
                    type: string
                    example: Nenhum dado fornecido
        '401':
          description: Token JWT ausente ou inválido
          content:
            application/json:
              schema:
                type: object
                properties:
                  erro:
                    type: string
                    example: Token inválido ou ausente
        '404':
          description: Usuário não encontrado
          content:
            application/json:
              schema:
                type: object
                properties:
                  erro:
                    type: string
                    example: Usuário não encontrado
        '500':
          description: Erro interno no servidor
          content:
            application/json:
              schema:
                type: object
                properties:
                  erro:
                    type: string
                    example: Erro inesperado no servidor

  # LISTAR USER
  /usuario/ListarUsuarios:
    get:
      tags:
        - Usuário
      summary: Listar todos os usuários
      responses:
        '200':
          description: Lista de usuários retornada com sucesso
        '500':
          description: Erro interno ao listar usuários






  # EXCLUIR USER
  /usuario/ExcluirUsuario/{usuario_id}:
    delete:
      tags:
        - Usuário
      summary: Excluir usuário por ID
      parameters:
        - name: usuario_id
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Usuário excluído com sucesso
        '404':
          description: Usuário não encontrado


  # EDITAR USER
  /usuario/EditarUsuario/{usuario_id}:
    put:
      tags:
        - Usuário
      summary: Editar dados do usuário
      parameters:
        - name: usuario_id
          in: path
          required: true
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                nome:
                  type: string
                email:
                  type: string
                senha:
                  type: string
                esporte_id:
                  type: string
                estado:
                  type: string
      responses:
        '200':
          description: Usuário editado com sucesso
        '400':
          description: Nenhum dado fornecido para atualização



# Esporte
  /esportes/AdicionarEsporte:
    post:
      tags:
        - Esporte
      summary: Adicionar novo esporte
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                nome:
                  type: string
                descricao:
                  type: string
              required:
                - nome
                - descricao
      responses:
        '200':
          description: Esporte adicionado com sucesso
        '400':
          description: Campos obrigatórios não fornecidos ou erro na requisição

  /esportes/ListarEsportes:
    get:
      tags:
        - Esporte
      summary: Listar todos os esportes
      responses:
        '200':
          description: Lista de esportes retornada com sucesso
        '500':
          description: Erro interno ao listar esportes

  /esportes/AtualizarEsporte/{esporte_id}:
    put:
      tags:
        - Esporte
      summary: Atualizar informações de um esporte
      parameters:
        - name: esporte_id
          in: path
          required: true
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                nome:
                  type: string
                descricao:
                  type: string
      responses:
        '200':
          description: Esporte atualizado com sucesso
        '400':
          description: Nenhum dado fornecido para atualização

  /esportes/ExcluirEsporte/{esporte_id}:
    delete:
      tags:
        - Esporte
      summary: Excluir esporte por ID
      parameters:
        - name: esporte_id
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Esporte excluído com sucesso
        '404':
          description: Esporte não encontrado



# Eventos
  /eventos/AdicionarEvento:
    post:
      tags:
        - Eventos
      summary: Adicionar um novo evento
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - esporte_id
                - nome
                - localizacao
                - data_hora
                - descricao
                - max_participantes
                - nivel_esporte
                - tipo_evento
              properties:
                usuario_id:
                  type: string
                esporte_id:
                  type: string
                nome:
                  type: string
                localizacao:
                  type: string
                data_hora:
                  type: string
                  format: date-time
                descricao:
                  type: string
                max_participantes:
                  type: integer
                nivel_esporte:
                  type: string
                tipo_evento:
                  type: string
                link_oficial:
                  type: string
      responses:
        '200':
          description: Evento adicionado com sucesso
        '400':
          description: Erro na requisição
          


  /eventos/ListarEvento:
    get:
      tags:
        - Eventos
      summary: Listar todos os eventos
      responses:
        '200':
          description: Lista de eventos
        '500':
          description: Erro interno ao listar eventos

  /eventos/BuscarEventoID/{evento_id}:
    get:
      tags:
        - Eventos
      summary: Buscar evento por ID
      parameters:
        - name: evento_id
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Evento encontrado
        '404':
          description: Evento não encontrado

  /eventos/AtualizarEvento/{evento_id}:
    put:
      tags:
        - Eventos
      summary: Atualizar um evento existente
      parameters:
        - name: evento_id
          in: path
          required: true
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                esporte_id:
                  type: string
                nome:
                  type: string
                localizacao:
                  type: string
                data_hora:
                  type: string
                  format: date-time
                descricao:
                  type: string
                max_participantes:
                  type: integer
                status_evento:
                  type: string
                nivel_esporte:
                  type: string
                link_oficial:
                  type: string
                tipo_evento:
                  type: string
                inscricoes_ativas:
                  type: boolean
                participantes:
                  type: array
                  items:
                    type: string
      responses:
        '200':
          description: Evento atualizado com sucesso
        '400':
          description: Erro na atualização do evento

  /eventos/ExcluirEventoID/{evento_id}:
    delete:
      tags:
        - Eventos
      summary: Excluir um evento por ID
      parameters:
        - name: evento_id
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Evento excluído com sucesso
        '404':
          description: Evento não encontrado



# Posts
  /postagem/CriarPostagem:
    post:
      tags:
        - Posts
      summary: Criar uma nova postagem
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                usuario_id:
                  type: string
                conteudo:
                  type: string
                esporte_praticado:
                  type: string
                imagem:
                  type: string
                  default: ""
                status_postagem:
                  type: string
                  default: "ativo"
                contador_curtidas:
                  type: integer
                  default: 0
      responses:
        '200':
          description: Postagem criada com sucesso
        '400':
          description: Requisição inválida ou dados ausentes
        '500':
          description: Erro interno ao criar postagem

  /postagem/ListarPostagens:
    get:
      tags:
        - Posts
      summary: Listar todas as postagens
      responses:
        '200':
          description: Lista de postagens
        '500':
          description: Erro interno ao listar postagens

  /postagem/ListarPostagensPorUsuario/{usuario_id}:
    get:
      tags:
        - Posts
      summary: Listar postagens de um usuário específico
      parameters:
        - name: usuario_id
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Lista de postagens do usuário
        '500':
          description: Erro interno ao listar postagens do usuário

  /postagem/ExcluirPostagem/{postagem_id}:
    delete:
      tags:
        - Posts
      summary: Excluir uma postagem por ID
      parameters:
        - name: postagem_id
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Postagem excluída com sucesso
        '404':
          description: Postagem não encontrada
        '500':
          description: Erro interno ao excluir postagem

  /postagem/EditarPostagem/{postagem_id}:
    put:
      tags:
        - Posts
      summary: Editar uma postagem por ID
      parameters:
        - name: postagem_id
          in: path
          required: true
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                usuario_id:
                  type: string
                conteudo:
                  type: string
                esporte_praticado:
                  type: string
                imagem:
                  type: string
                  default: ""
                status_postagem:
                  type: string
                  default: "ativo"
                contador_curtidas:
                  type: integer
                  default: 0
      responses:
        '200':
          description: Postagem editada com sucesso
        '400':
          description: Dados ausentes ou inválidos
        '500':
          description: Erro interno ao editar postagem

  /postagem/CurtirPostagem/{postagem_id}:
    post:
      tags:
        - Posts
      summary: Curtir uma postagem
      parameters:
        - name: postagem_id
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Postagem curtida com sucesso
        '404':
          description: Postagem não encontrada
        '500':
          description: Erro interno ao curtir postagem

